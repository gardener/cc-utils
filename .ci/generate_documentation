#!/usr/bin/env python3
import os
import pathlib
import subprocess
import tempfile

import git

import gitutil
import github.util
from util import (
    check_env,
    ctx,
    fail,
    which,
)

# Verify that required env_vars are set
sphinx_executable = which('sphinx-build')
source_repo_dir = pathlib.Path(check_env('SOURCE_PATH')).resolve()
source_relative_doc_root_dir = check_env('REL_DOC_ROOT_DIR')

# Verify optional env_vars
# In anticipation of changes to pipeline contract, use '<logical_name>_COMPONENT_NAME>
# (e.g.: 'github.com/gardener/cc-utils')
# TODO: rm comment once changes are made
target_component_name = os.environ.get('TARGET_COMPONENT_NAME', None)
# Set source repo as target if no target repo specified.
if target_component_name is None:
    target_component_name = check_env('SOURCE_COMPONENT_NAME')

target_gh_host_name, org_name, repo_name = target_component_name.split('/')
target_repo_path = '/'.join([org_name, repo_name])

context = ctx()
config_factory = context.cfg_factory()

gh_config = github.util.github_cfg_for_hostname(config_factory, target_gh_host_name)

with tempfile.TemporaryDirectory() as tmp_dir:
    gitutil.clone_repository(
        to_path=tmp_dir,
        github_cfg=gh_config,
        github_repo_path=target_repo_path,
    )

    tmp_repo_dir = pathlib.Path(tmp_dir).resolve() / repo_name

    git.cmd.Git(tmp_repo_dir).checkout(['-f','gh-pages'])

    git_helper = gitutil.GitHelper(
        repo=tmp_repo_dir,
        github_cfg=gh_config,
        github_repo_path=target_repo_path,
    )

    input_path = source_repo_dir / source_relative_doc_root_dir
    output_path = tmp_repo_dir

    # Run sphinx-build with given source and target dirs
    subprocess.run(
        [
            sphinx_executable,
            '-b', 'html',
            '-a',
            input_path,
            output_path
        ],
        check=True,
    )

    # Create commit and push to branch
    commit_hash = git_helper.index_to_commit('update autogenerated doc')
    git_helper.push(commit_hash.hexsha, 'refs/heads/gh-pages')
