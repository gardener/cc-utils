name: Authenticate against OCI-Registries
description: |
  An opinionated action capable of authenticating against either ghcr.io (github's oci registry),
  or Google-Artifact-Registry.

  Contains hardcoded defaults for GAR for OIDC-auth against `gardener-project`-GCP-Project.
  Permissions are pre-configured for GitHub-Actions running for repositories below
  github.com/gardener organisation, only.

  Specifically for forks (but also for other pipelines, where usage of GHCR is preferred), the
  action also allows authentication against GHCR (gh-token must be passed in from
  `secrets.GITHUB_TOKEN`).

  For convenience, the correct authentication method is derived from passed-in
  `oci-image-reference` (this is especially useful for workflows that should work both for
  repositories below gardener-org, and for forks, where different push-targets are configured).

  parameters specific to GAR are prefixed w/ `gcp-`, whereas parameters specific to GHCR are
  prefixed w/ `gh-`.

inputs:
  gcp-service-account:
    description: The GCP-Service-Account to impersonate
    required: false
    default: ci-gcr-operator@gardener-project.iam.gserviceaccount.com
  gcp-workload-identity-provider:
    description: |
       GCP Workload Identity Provider. Default is configured for GitHub-Actions for
       github.com/gardener organisation.
    required: false
    default: projects/694386720375/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions
  gcp-project:
    description: |
      The GCP Project to authenticate against
    required: false
    default: gardener-project
  gh-token:
    description: |
      The token from GitHub-Action (secrets.GITHUB_TOKEN).
    required: false
  oci-image-reference:
    required: true
    description: |
      The OCI-Image-Reference specifying the OCI-Registry to authenticate against.
    default: europe-docker.pkg.dev/gardener-project
  extra-auths:
    required: false
    description: |
      A JSON-Document containing a mapping of additional auth-cfgs of the following form:
      { <host>: {"auth": <token>}}

      example:
      ```
      {"registry-1.docker.io": {"auth": "abcd"}}
      ```
      Passed tokens will be _appended_ to resulting docker-cfg, and thus have precedence.
  print-summary:
    default: false
    type: boolean
    description: |
      If set to `true`, the action will print a summary about authentication result, as well as
      additional output, such as written files.

outputs:
  docker-cfg:
    description: |
      A $HOME/.docker/config.json containing the token (for convenience)
    value: ${{ steps.oci-auth.outputs.docker-cfg }}

runs:
  using: composite
  steps:
    - uses: gardener/cc-utils/.github/actions/install-gardener-gha-libs@master
    - name: OCI Auth
      id: oci-auth
      shell: python
      run: |
        import json
        import os
        import sys
        import textwrap

        sys.path.insert(1, os.environ['GITHUB_ACTION_PATH'])
        import oidc


        os.environ['GITHUB_TOKEN'] = '${{ inputs.gh-token }}' # may be required for auth against GHCR

        image_references = [
          image_reference.strip()
          for image_reference in '${{ inputs.oci-image-reference }}'.split(',')
        ]

        extra_auths = '''
        ${{ inputs.extra-auths }}
        '''.strip()

        if extra_auths:
          extra_auths = json.loads(extra_auths)
          if not isinstance(extra_auths, dict):
            print(f'expected a dict for extra-auths, but got: {type(extra_auths)=}')
            exit(1)
        else:
          extra_auths = None

        docker_cfg = oidc.write_docker_config(
          image_references=image_references,
          extra_auths=extra_auths,
        )

        with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
          f.write(f'docker-cfg={json.dumps(docker_cfg)}\n')
