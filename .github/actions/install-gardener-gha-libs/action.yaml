name: Install Gardener-GHA-Libs
description: |
  Install Python3 and gardener-gha-libs

  As GitHub-Actions in https://github.com/gardener/cc-utils still sees frequent development,
  install from sources (checking out head of `master`), rather than from PYPI.

runs:
  using: composite
  steps:
    - name: check-if-installed
      id: check
      shell: bash
      run: |
        if pip show gardener-gha-libs &>/dev/null; then
          echo "already-installed=true" >> ${GITHUB_OUTPUT}
        fi
    - uses: actions/checkout@v4
      if: ${{ ! steps.check.outputs.already-installed && github.server_url == 'https://github.com' }}
      with:
        repository: gardener/cc-utils
        path: cc-utils
    - name: setup-python-on-ghe
      if: ${{ ! steps.check.outputs.already-installed && github.server_url != 'https://github.com' }}
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: pip
    - name: install-prerequisites-on-ghe
      if: ${{ ! steps.check.outputs.already-installed && github.server_url != 'https://github.com' }}
      shell: bash
      run: |
        set -eu
        pip install setuptools
    - name: checkout-fallback
      if: ${{ ! steps.check.outputs.already-installed && github.server_url != 'https://github.com' }}
      shell: bash
      run: |
        set -euo pipefail
        # fallback if running on GHE
        git clone https://github.com/gardener/cc-utils
    - name: install-gardener-gha-libs
      if: ${{ ! steps.check.outputs.already-installed }}
      shell: bash
      run: |
        set -eu

        # mv outside of $PWD to avoid leaving files in workdir
        tmpdir="$(mktemp -d)"
        mv cc-utils ${tmpdir}
        cd "${tmpdir}/cc-utils"

        python3 --version

        pip=pip
        if not which pip &>/dev/null; then
          pip=pip3
        fi
        if not $pip install setuptools &>/tmp/install.log; then
          cat /tmp/install.log
          echo 'failed to install setuptools'
          exit 1
        fi

        version=$(.ci/read-version)
        if [[ "${version}" == *-* ]]; then
          # version was non-final - add suffix compliant w/ pep-440
          # (see: https://peps.python.org/pep-0440/)
          version="${version%%-*}-dev0"
          # ensure packages see exactly the same version as we expect
          echo "${version}" | .ci/write-version
        fi

        function build_package() {
          setup_file="${1}"
          if ! python3 "${setup_file}" bdist_wheel \
            --dist-dir dist &>/tmp/build.log; then
            echo package-build returned an error - dumping log:
            cat /tmp/build.log
            echo ----
            echo will now exit
            exit 1
          fi
        }
        echo 'building gardener-gha-libs'
        build_package setup.gha.py
        build_package setup.oci.py
        build_package setup.ocm.py

        echo "building w/ effective version ${version}"

        if ! pip install --find-links dist \
          gardener-oci=="${version}" \
          gardener-ocm=="${version}" \
          gardener-gha-libs=="${version}" &> /tmp/pip-install.log; then
            echo 'An error occured while tring to run pip install:'
            cat /tmp/pip-install.log
            exit 1
        fi
