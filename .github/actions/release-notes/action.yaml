name: release-notes
description: |
  retrieves release-notes following conventions from Gardener-Project

inputs:
  component-descriptor:
    description: |
      effective OCM component-descriptor. It is sufficient to pass a `base component-descriptor`,
      as output by `base-component-descriptor` workflow. Its version must be set to next planned
      version (e.g. `1.2.0-dev`, if greatest released version was `1.1.0`).
    required: true
  ocm-repositories:
    description: |
      a (commaseparated) list of ocm-repository-URLs where component-versions are to be looked up
      (order is honoured).

      Caveat: this action will only honour final versions. Hence, at least one ocm-repository
      containing final/release versions must be passed.

      If no ocm-repository is passed, this action will fallback to the current ocm-repository from
      passed ocm-component-descriptor (see caveat above).
  github-token:
    description: |
      the github-auth-token to use for authenticating against GitHub, use `secrets.GITHUB_TOKEN`.
      If not passed-on via input, env-var GITHUB_TOKEN will be honoured
  include-subcomponent-release-notes:
    description: |
      if set to `true`, release-notes of subcomponents will be included in full-release-notes
    default: false
    type: boolean
  draft:
    type: boolean
    default: false
    description: |
      if true, will collect draft-release-notes
  release-notes-variants:
    required: true
    type: string
    description: |
      Used to create different subsets of release-notes.
      Each variant is rendered as markdown file and added to release-notes artifact.

      Expected structure (see release workflow inputs for allowed values):
      ```
      - name: my-variant
        audiences: 'developer,operator'
        categories: 'bugfix,feature'
        recursion_depth: 0
        include_resources: true
      - name: your-variant
        audiences: 'operator'
        categories: 'feature'
        recursion_depth: -1
        include_resources: false
      ```

      Only name is required.
      Audiences and categories default to "include all", whereas recursion-depth defaults to 0.

runs:
  using: composite
  steps:
    - name: install-gardener-gha-libs
      uses: gardener/cc-utils/.github/actions/install-gardener-gha-libs@master
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # release-notes code needs full commit-history and tags
        fetch-tags: 0
    - uses: gardener/cc-utils/.github/actions/setup-git-identity@master
    - name: authenticate-against-oci-registry
      uses: gardener/cc-utils/.github/actions/oci-auth@master
      with:
        oci-image-reference: ${{ inputs.ocm-repositories }} # only the first entry will be used

    - name: Prepare release-notes variants cfg
      id: prep-releaes-notes-variants-cfg
      shell: python
      run: |
        import yaml

        release_notes_variant_cfg = '''\
        ${{ inputs.release-notes-variants }}
        '''
        release_notes_variant_cfg = yaml.safe_load(release_notes_variant_cfg)

        for variant in release_notes_variant_cfg:
          for key in ('audiences', 'categories'):
            if (value := variant.get(key, None)):
              variant[key] = value.split(',')
              continue

            del variant[key] # use dataclass default

        with open('release-notes-variants-cfg.yaml', 'w') as f:
          yaml.dump(release_notes_variant_cfg, f)

    - name: Retrieve Release-Notes
      id: release-notes
      shell: bash
      run: |
        set -eu

        cat <<EOF > component-descriptor.yaml
        ${{ inputs.component-descriptor }}
        EOF

        echo 'Component-Descriptor:'
        cat component-descriptor.yaml

        auth_token="${{ inputs.github-token }}"

        if [ -z "${auth_token:-}" ]; then
          auth_token="${GITHUB_TOKEN}"
        fi

        if [ "${{ inputs.draft }}" == 'true' ]; then
          draft_arg='--draft'
        fi

        if [ -n "${{ inputs.ocm-repositories }}" ]; then
          ocm_repositories_arg="--ocm-repositories ${{ inputs.ocm-repositories }}"
        fi

        if ! ${{ inputs.include-subcomponent-release-notes }}; then
          extra_args='--no-subcomponent-release-notes'
        fi

        echo 'Fetching release-notes'
        "${GITHUB_ACTION_PATH}/release_notes_cli.py" \
          --component-descriptor component-descriptor.yaml \
          --github-auth-token "${auth_token}" \
          ${draft_arg:-} \
          ${ocm_repositories_arg:-} \
          --release-notes-variants-cfg-path release-notes-variants-cfg.yaml \
          --local-release-notes local-release-notes.md \
          --tar-output release-notes.tar ${extra_args:-}

        echo '## Release-Notes (local)' >> ${GITHUB_STEP_SUMMARY}
        cat local-release-notes.md >> ${GITHUB_STEP_SUMMARY}

    - uses: gardener/cc-utils/.github/actions/upload-artifact@master
      with:
        name: release-notes
        path: release-notes.tar
