name: Params
description: |
  An opinionated action that will emit parameters, such as OCI- and OCM-Target-Repositories, based
  on input-parameters, such as:
  - whether running on a forked repository vs. upstream
  - `mode` (snapshot vs. release)

inputs:
  mode:
    required: true
    type: choice
    default: snapshot
    options:
      - snapshot
      - release
    description: |
      "mode" will influence target-repositories to be returned.
  gh-token:
    required: true
    type: string
    description: |
      Pass-in GITHUB_TOKEN. Needs permissions to read-contents (for accessing metadata about current
      repository).

outputs:
  oci-registry:
    description: |
      the OCI-Registry to use for publishing OCI-Artefacts to, considering the chosen `mode`
    value: ${{ steps.params.outputs.oci-registry }}
  ocm-repository:
    description: |
      the OCM-Repository to use for both publishing, and looking-up of OCM-Components
    value: ${{ steps.params.outputs.ocm-repository }}
  ocm-releases-repository:
    description: |
      the OCM-Repository hosting (final) release-versions (returned independent from chosen mode)
    value: ${{ steps.params.outputs.ocm-releases-repository }}
  is-fork:
    description: |
      true if current repository is a fork, else false
    value: ${{ steps.params.outputs.is-fork }}
  is-pr-from-fork:
    description: |
      true if triggering event is `pull_request`, and underlying pullrequest stems from a fork that
      does not belong to the same owner as the target repository.
    value: ${{ steps.params.outputs.is-pr-from-fork }}
  can-push:
    description: |
      boolean indicating whether or not it will likely be possible for this workflow to push
      contents (to OCI-Registries).

      If repository from which the workflow was triggered is not a fork (or a fork within the same
      organisation), pushing is always deemed possible (following cases refer to forks, only).

      If the `workflow_event` reads `pull_request`, pushing is _not_ deemded to be possible.

      If the `workflow_event` reads `pull_request_target`, pushing is possible, if the
      `author_association` of the pullrequest-event is one of `COLLABORATOR`,
      `MEMBER`, `OWNER`.

      Note that consistent usage of `cc-utils/.github/actions/trusted-checkout` is required.
      Workflows offered from cc-utils repository already do this.
    value: ${{ steps.params.outputs.can-push }}

runs:
  using: composite
  steps:
    - id: repo-metadata
      uses: gardener/cc-utils/.github/actions/repo-metadata@master
      with:
        gh-token: ${{ inputs.gh-token }}
    - name: params
      id: params
      shell: bash
      run: |
        set -eu

        is_fork=${{ steps.repo-metadata.outputs.fork }}
        echo "repo is a fork: ${is_fork}"

        if [ "${is_fork}" == true ]; then
          # avoid interference w/ images or component-descriptors from forked repositories
          # (also: do not require forks to have permissions for gardener's registries)
          repo_base=ghcr.io/${{ github.repository }}
        elif [ "${is_fork}" == false ]; then
          repo_base=europe-docker.pkg.dev/gardener-project
        else
          echo "unexpected value for is_fork: ${is_fork}"
          exit 1
        fi

        ocm_releases_repository=${repo_base}/releases

        case "${{ inputs.mode }}" in
          snapshot)
            ocm_repository="${repo_base}/snapshots"
            oci_registry="${repo_base}/snapshots"
            ;;
          release)
            ocm_repository="${ocm_releases_repository}"
            oci_registry="${repo_base}/releases"
            ;;
          *)
            echo "Error: unknown mode: ${{ inputs.mode }}"
            ;;
        esac

        event_name='${{ github.event_name }}'
        if [ ${event_name} == 'pull_request' ]; then
          repo_owner='${{ github.repository_owner }}'
          head_owner='${{ github.event.pull_request.head.repo.owner.login }}'
          if [ ${repo_owner} != ${head_owner} ]; then
            is_pr_from_fork=true
            can_push=false
          else
            is_pr_from_fork=false
            can_push=true
          fi
        elif [ ${event_name} == 'pull_request_target' ]; then
          case '${{ github.event.pull_request_target.author_association }}' in
            COLLABORATOR)
              can_push=true
              ;;
            MEMBER)
              can_push=true
              ;;
            OWNER)
              can_push=true
              ;;
            CONTRIBUTOR)
              can_push=false
              ;;
            *)
              can_push=false
          esac
        else
          is_pr_from_fork=false
          can_push=true
        fi

        echo "oci-registry=${oci_registry}" >> ${GITHUB_OUTPUT}
        echo "ocm-repository=${ocm_repository}" >> ${GITHUB_OUTPUT}
        echo "ocm-releases-repository=${ocm_releases_repository}" >> ${GITHUB_OUTPUT}
        echo "is-fork=${is_fork}" >> ${GITHUB_OUTPUT}
        echo "is-pr-from-fork=${is_pr_from_fork}" >> ${GITHUB_OUTPUT}
        echo "can-push=${can_push}" >> ${GITHUB_OUTPUT}

        cat << EOF > ${GITHUB_STEP_SUMMARY}
        ## Pipeline-Params-Summary

        <table> <tbody>
          <tr> <td>mode</td>            <td>${{ inputs.mode }}</td> </tr>
          <tr> <td>oci-registry</td>    <td>${oci_registry}</td> </tr>
          <tr> <td>ocm-repository</td>  <td>${ocm_repository}</td> </tr>
          <tr> <td>is-fork</td>         <td>${is_fork}</td> </tr>
          <tr> <td>is-pr-from-fork</td> <td>${is_pr_from_fork}</td> </tr>
          <tr> <td>can-push</td>        <td>${can_push}</td> </tr>
        </tbody> </table>
        EOF
