name: Trusted Checkout
description: |
  A wrapper around github.com/actions/checkout, with safety measures for pullrequests triggered
  from forks with `pull_request_target` event.

  It will by default behave identical to wrapped checkout-action. For pullrequests from forked
  repositories, which are triggered by the `pull_request_target` event (where wrapped checkout
  action will by default checkout receiving repository's contents), this action will instead
  checkout the pullrequest's contents (to allow for building/testing code proposed by the
  pullrequest). As this is generally considered to be unsafe, this will only be done under certain
  conditions:

  - if the fork's owner is equal to the target's (i.e. fork within the same organisation)
  - if the author_association is one of:
    - COLLABORATOR
    - MEMBER
    - OWNER

inputs:
  fetch-depth:
    type: number
    default: 1
    required: false
    description: |
      passed to `actions/checkout`'s as `fetch-depth` input.

      useful for cases where longer history is required.
  trusted-label:
    type: string
    default: 'reviewed/ok-to-test'
    description: |
      a label, that can be used to mark pullrequests as trusted, regarless of author's association.

      For security-reasons, this action will remove the label, such that it will have to be
      added again (adding the label will work as trigger).
  needs-trusted-label:
    type: string
    default: 'needs/ok-to-test'
    description: |
      a label that is added as a marker in order to notify lack of "trusted-label"

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
    - name: checkout-pullrequest
      if: ${{ github.event_name == 'pull_request_target' }}
      id: calc
      shell: python
      run: |
        import os
        import subprocess
        import textwrap

        allowed_author_associations = (
          'COLLABORATOR',
          'MEMBER',
          'OWNER',
        )
        author_association = '${{ github.event.pull_request.author_association }}'
        allowed_to_checkout = author_association in allowed_author_associations

        # if pullrequest is labelled, it is also considered trusted, regardless of
        # author's association (rationale: only codeowners can add labels)
        trusted_label = '${{ inputs.trusted-label }}'

        if '${{ github.event.action }}' == 'labeled':
          if '${{ github.event.label.name }}' == trusted_label:
            allowed_to_checkout = True
            with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f'remove-label={trusted_label}\n')

        if not allowed_to_checkout:
          summary = textwrap.dedent(f'''\
          [!WARNING]
          Checked out target-repository's contents, as pullrequest author is not trusted
          ''')
          with open(os.environ['GITHUB_STEP_SUMMARY'], 'a') as f:
            f.write(summary)
          exit(0)

        # allowed to checkout
        repository = '${{ github.event.pull_request.head.repo.full_name }}'
        remote = f'${{ github.server_url }}/{repository}'
        summary = ''

        subprocess.run(
          (
            'git', 'fetch', remote, 'refs/heads/${{ github.head_ref }}',
          ),
          check=True,
        )
        subprocess.run(
          (
            'git', 'checkout', '-B', 'refs/heads/${{ github.head_ref }}', 'FETCH_HEAD',
          ),
          check=True,
        )
    - if: ${{ steps.calc.outputs.remove-label }}
      uses: gardener/cc-utils/.github/actions/install-gardener-gha-libs@master
    - name: remove-trusted-and-add-needs-label
      if: ${{ steps.calc.outputs.remove-label }}
      shell: python
      run: |
        import github3.exceptions
        import github
        gh_api = github.github_api(token='${{ github.token }}')
        _, org, repo = github.host_org_and_repo()
        gh_repo = gh_api.repository(org, repo)

        # we need issue-api to rm label (id is equal for pr and issue)
        pull_request = gh_repo.issue(${{ github.event.number }})

        try:
          pull_request.remove_label('${{ steps.calc.outputs.remove-label }}')
        except github3.exceptions.NotFoundError:
          # trusted-checkout typically runs multiple times, so the label already being absent
          # is an expected, and of course, acceptable case
          exit(0)

        pull_request.add_labels('${{ inputs.needs-trusted-label }}')
