name: Release
on:
  workflow_dispatch:
    inputs:
      release-to-pypi:
        required: false
        type: boolean
        default: false
        description: Whether to release to PYPI

defaults:
  run:
    shell: bash

jobs:
  build:
    uses: ./.github/workflows/build-and-test.yaml
    with:
      mode: 'release'
      version-prerelease: ''
      version-commit-message: "release ${version}"


  release-to-github-and-bump:
    uses: ./.github/workflows/release.yaml
    needs:
      - build
    with:
      component-descriptor: ${{ needs.build.outputs.base-component-descriptor }}
      release-commit-objects: ${{ needs.build.outputs.version-commit-objects }}
      release-commit-target: branch
      next-version: bump-minor

  publish-documentation:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    needs:
      - build

    steps:
      - uses: actions/checkout@v4
      - name: Retrieve Documentation
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: /tmp/documentation-out.d
      - uses: gardener/cc-utils/.github/actions/setup-git-identity@master
      - name: Publish Documentation
        run: |
          git fetch origin gh-pages
          git checkout -f gh-pages
          git clean -dfx
          git status
          echo "let's hope our worktree is clean"
          tar c -C /tmp/documentation-out.d . | tar x -C.
          git status
          if [ -z "$(git status --porcelain)" ]; then
            echo "no changes in documentation - no need to update documentation"
            git checkout master # needed for post-gar
            exit 0
          fi
          git add -A
          git commit -m "update documentation"
          git push origin refs/heads/gh-pages
          git checkout master # needed for post-gar

  pypi:
    if: ${{ inputs.release-to-pypi }}
    runs-on: ubuntu-latest
    name: Publish to PYPI
    needs:
      - build
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Retrieve Distribution Packages
        uses: actions/download-artifact@v4
        with:
          name: distribution-packages
          path: /tmp/dist
      - name: prepare build-filesystem
        id: prepare
        run: |
          ls -lta /tmp/dist
          mv /tmp/dist/distribution-packages.tar.gz .
          tar xf distribution-packages.tar.gz
          ls -lta dist/
          rm -rf dist/blobs.d dist/ocm_resources.yaml
          ls -lta dist/
      - name: publish to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
