name: Post-Build

# description: |
#   A reusable workflow for performing common post-build steps, such as
#   retrieving and uploading the OCM Component-Descriptor as created by a
#   build using `prepare.yaml` and `export-ocm-fragment` action(s), or updating draft-releases.
#
#   Counterpart to `release.yaml` for non-release-jobs. Callers must ensure it is run only after
#   build-job(s) emitted OCM-Fragments are finished prior to running this workflow.

on:
  workflow_call:
    inputs:
      ocm-repositories:
        type: string
        required: false
        description: |
          a comma-separated list of OCM-Repository-URLs to use for looking up
          OCM-Component-Descriptors. If not passed, the value will be read from the
          `prepare-workflow-values` artefact, which is by default emitted by the
          `prepare.yaml` workflow (which must have been run prior to calling this workflow for
          this to succeed).
      on-existing-component-descriptor:
        type: string
        default: overwrite
        description: |
          defines how to behave in case the to-be-uploaded component-descriptor already exists.
          allowed values are:
            - overwrite
            - skip # silently ignore
            - fail
      ocm-post-process:
        type: string
        default: component-cli
        description: |
          passed as `post-process`-input to merge-ocm-fragments. Allowed values are:
          - component-cli
          - none

          Defines how component-descriptor should be post-processed.
      include-subcomponent-release-notes:
        type: boolean
        default: false
        description: |
          passed as same-named input to release-notes action. Controls whether copies of
          release-notes of subcomponents should be included.
    outputs:
      component-descriptor:
        description: |
          the final component-descriptor after base-component-descriptor and any emitted
          fragments from other jobs.
        value: ${{ jobs.component-descriptor.outputs.component-descriptor }}

jobs:
  component-descriptor:
    runs-on: ${{ vars.DEFAULT_RUNNER || 'ubuntu-latest' }}
    permissions:
      contents: read
      id-token: write

    outputs:
      component-descriptor: ${{ steps.collect.outputs.component-descriptor }}
      version: ${{ steps.collect.outputs.version }}

    steps:
      - name: collect-component-descriptor
        id: collect
        uses: gardener/cc-utils/.github/actions/merge-ocm-fragments@master
        with:
          component-descriptor-artefact: base-component-descriptor
          outdir: /tmp/ocm
          post-process: ${{ inputs.ocm-post-process }}
      - name: read-target-oci-ref
        id: read-oci-ref
        shell: python
        run: |
          import os
          import yaml
          import ocm

          with open('/tmp/ocm/component-descriptor.yaml') as f:
            component_descriptor = ocm.ComponentDescriptor.from_dict(
              yaml.safe_load(f.read())
            )
          component = component_descriptor.component
          tgt_ocm_repo = component.current_ocm_repo
          tgt_oci_ref = tgt_ocm_repo.component_version_oci_ref(
            name=component.name,
            version=component.version,
          )
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            f.write(f'ocm-target-oci-ref={tgt_oci_ref}\n')

      - name: fetch-prepare-values
        uses: gardener/cc-utils/.github/actions/download-artifact@master
        with:
          name: prepare-workflow-values
      - name: prepare-prepare-workflow-values
        id: prep
        run: |
          tar xf prepare-workflow-values.tar prepare-values.d/can-push
          can_push="$(cat prepare-values.d/can-push)"
          rm -rf prepare-values.d prepare-workflow-values.tar
          echo "can-push=${can_push}" >> ${GITHUB_OUTPUT}

      - name: authenticate-against-oci-registry
        if: ${{ steps.prep.outputs.can-push == 'true' }}
        uses: gardener/cc-utils/.github/actions/oci-auth@master
        with:
          oci-image-reference: ${{ steps.read-oci-ref.outputs.ocm-target-oci-ref }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
      - name: upload-component-descriptor-to-ocm-repository
        if: ${{ steps.prep.outputs.can-push == 'true' }}
        run: |
          python -m ocm upload \
            --file /tmp/ocm/component-descriptor.yaml \
            --blobs-dir /tmp/ocm/blobs.d \
            --on-exist ${{ inputs.on-existing-component-descriptor }}
          tar czf component-descriptor.tar.gz -C /tmp/ocm component-descriptor.yaml
      - name: upload-component-descriptor-as-artefact
        uses: gardener/cc-utils/.github/actions/upload-artifact@master
        with:
          path: component-descriptor.tar.gz
          name: component-descriptor

  repo-metadata:
    runs-on: ${{ vars.DEFAULT_RUNNER || 'ubuntu-latest' }}
    outputs:
      fork: ${{ steps.repo-metadata.outputs.fork }}
    steps:
      - id: repo-metadata
        uses: gardener/cc-utils/.github/actions/repo-metadata@master
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}

  draft-release:
    name: Update / Create Draft-Release
    needs:
      - component-descriptor
      - repo-metadata
    # only run for default-branch, and never run for forks
    if: ${{ github.ref_name == github.event.repository.default_branch &&
            ! fromJSON(needs.repo-metadata.outputs.fork) &&
            github.event_name == 'push'
        }}
    runs-on: ${{ vars.DEFAULT_RUNNER || 'ubuntu-latest' }}
    permissions:
      contents: write
    steps:
      - name: fetch-prepare-values
        if: ${{ inputs.ocm-repositories == '' }}
        uses: gardener/cc-utils/.github/actions/download-artifact@master
        with:
          name: prepare-workflow-values
      - name: prepare-prepare-workflow-values
        id: prep
        run: |
          if [ -f prepare-workflow-values.tar ]; then
            tar xf prepare-workflow-values.tar prepare-values.d/ocm-repositories
            ocm_repos="$(cat prepare-values.d/ocm-repositories)"
            rm -rf prepare-values.d prepare-workflow-values.tar
          else
            ocm_repos="${{ inputs.ocm-repositories }}"
          fi
          echo "ocm-repositories=${ocm_repos}" >> ${GITHUB_OUTPUT}
      - uses: actions/checkout@v4
      - name: draft-release-notes
        id: drn
        uses: gardener/cc-utils/.github/actions/release-notes@master
        with:
          component-descriptor: ${{ needs.component-descriptor.outputs.component-descriptor }}
          ocm-repositories: ${{ steps.prep.outputs.ocm-repositories }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          include-subcomponent-release-notes: ${{ inputs.include-subcomponent-release-notes }}
      - name: update-draft-release
        uses: gardener/cc-utils/.github/actions/draft-release@master
        with:
          version: ${{ needs.component-descriptor.outputs.version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-notes: ${{ steps.drn.outputs.full-release-notes }}
