name: Upgrade Dependencies

# description: |
#   A re-usable workflow for creating upgrade-pullrequests for referenced OCM-Components.

on:
  workflow_call:
    inputs:
      component-descriptor:
        required: false
        type: string
        description: |
          The Component-Descriptor containing the Component-References to honour.
          If not given, a default Component-Descriptor will be determined using the
          `prepare.yaml` workflow.
      ocm-repositories:
        required: false
        type: string
        description: |
          An optional, comma-separated list of OCM-Repositories that should be used for looking-up
          OCM-Component-Versions. If not passed, the releases-repository from `prepare.yaml`
          workflow will be used.
      ocm-post-process:
        required: false
        type: string
        description: |
          Passed to `prepare.yaml` as `post-process` input
        default: component-cli
      oci-registry-prefix:
        type: string
        default: europe-docker.pkg.dev/gardener-project
        description: |
          Passed to `prepare.yaml` workflow as equally-named input.
      releases-suffix:
        type: string
        default: releases
        description: |
          Passed to `prepare.yaml` workflow as equally-named input.
      checkout-submodules:
        type: string
        required: false
        default: false
        description: |
          passed to checkout (as `submodules` input). either `false`, or `recursive`.
      merge-policy:
        required: false
        default: manual
        type: string
        description: |
          Controls what should happen to newly created upgrade-pullrequests. Allowed values are:
            - automerge
            - manual
      merge-method:
        required: false
        default: merge
        type: string
        description: |
          Sets the merge-method (only used if merge-policy is set to automerge). Allowed values are:
            - rebase
            - merge
            - squash
      prepare-action-path:
        required: false
        type: string
        description: |
          An optional path (relative to repository-root) to a local action. If given, this action
          will be called prior to calling `set_dependency_version` callback. Useful to install
          preliminaries, such as golang toolchain.
      upstream-component-name:
        required: false
        type: string
        description: Upstream component name to gate against
        default: ""
      upstream-update-policy:
        required: false
        type: string
        description: strictly-follow | accept-hotfixes
        default: strictly-follow

jobs:
  prepare:
    if: ${{ inputs.component-descriptor == '' }}
    uses: ./.github/workflows/prepare.yaml
    secrets: inherit
    with:
      mode: release
      post-process: ${{ inputs.ocm-post-process }}
      oci-registry-prefix: ${{ inputs.oci-registry-prefix }}
      releases-suffix: ${{ inputs.releases-suffix }}
      ocm-repositories: ${{ inputs.ocm-repositories }}
      checkout-submodules: ${{ inputs.checkout-submodules }}

  create-upgrade-pullrequests:
    runs-on: ${{ vars.DEFAULT_RUNNER || 'ubuntu-latest' }}
    # run even if `prepare` job is skipped
    if: ${{ !cancelled() }}
    needs:
      - prepare
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: gardener/cc-utils/.github/actions/trusted-checkout@master
        id: checkout
        with:
          submodules: ${{ inputs.checkout-submodules }}
          auth-app-client-id: ${{ vars.GARDENER_GITHUB_ACTIONS_APP_ID }}
          auth-app-private-key: ${{ secrets.GARDENER_GITHUB_ACTIONS_PRIVATE_KEY }}
      - uses: gardener/cc-utils/.github/actions/ocm-upgrade@master
        with:
          component-descriptor: |
            ${{ inputs.component-descriptor || needs.prepare.outputs.component-descriptor }}
          ocm-repositories: |
            ${{ needs.prepare.outputs.ocm-repositories || inputs.ocm-repositories }}
          github-token: ${{ steps.checkout.outputs.token }}
          merge-policy: ${{ inputs.merge-policy }}
          merge-method: ${{ inputs.merge-method }}
          prepare-action-path: ${{ inputs.prepare-action-path }}
          upstream-component-name: ${{ inputs.upstream-component-name }}
          upstream-update-policy: ${{ inputs.upstream-update-policy }}
